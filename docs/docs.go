// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/campus_reminders": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Retrieves campus reminders",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminGetCampusReminders",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "It says if the data is associated with the current app or it is for all the apps within the organization. It is 'false' by default.",
                        "name": "all-apps",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma separated IDs of the desired records",
                        "name": "ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit - limit the result",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order - Possible values: asc, desc. Default: desc",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContentItem"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Creates a new campus reminder. \u003cb\u003e The data element could be either a primitive or nested json or array.\u003c/b\u003e",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminCreateCampusReminder",
                "parameters": [
                    {
                        "description": "Params",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createContentItemByCategoryRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ContentItem"
                        }
                    }
                }
            }
        },
        "/admin/campus_reminders/{id}": {
            "put": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Updates a campus reminder with the specified id. \u003cb\u003e The data element could be either a primitive or nested json or array.\u003c/b\u003e",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminCampusReminder",
                "parameters": [
                    {
                        "description": "Params",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateContentItemByCategoryRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ContentItem"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Deletes a campus reminder with the specified id",
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminDeleteCampusReminder",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "It says if the data is associated with the current app or it is for all the apps within the organization. It is 'false' by default.",
                        "name": "all-apps",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/admin/content_item/categories": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Retrieves  all content item categories that have in the database",
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminGetContentItemsCategories",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "It says if the data is associated with the current app or it is for all the apps within the organization. It is 'false' by default.",
                        "name": "all-apps",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/admin/content_items": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Retrieves  all content items.\u003cb\u003e The data element could be either a primitive or nested json or array.\u003c/b\u003e",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminGetContentItems",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "It says if the data is associated with the current app or it is for all the apps within the organization. It is 'false' by default.",
                        "name": "all-apps",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit - limit the result",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order - Possible values: asc, desc. Default: desc",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "description": "Optional - body json of the all items ids that need to be filtered. NOTE: Bad/broken json will be interpreted as an empty filter and the request will be proceeded further.",
                        "name": "data",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/getContentItemsRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContentItem"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Creates a new content item. \u003cb\u003e The data element could be either a primitive or nested json or array.\u003c/b\u003e",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminCreateContentItem",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/createContentItemRequestBody"
                        }
                    }
                }
            }
        },
        "/admin/content_items/{id}": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Retrieves a content item by id. \u003cb\u003e The data element could be either a primitive or nested json or array.\u003c/b\u003e",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminGetContentItem",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "It says if the data is associated with the current app or it is for all the apps within the organization. It is 'false' by default.",
                        "name": "all-apps",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ContentItem"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Updates a content item with the specified id. \u003cb\u003e The data element could be either a primitive or nested json or array.\u003c/b\u003e",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminUpdateContentItem",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ContentItem"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Deletes a content item with the specified id",
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminDeleteContentItem",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "It says if the data is associated with the current app or it is for all the apps within the organization. It is 'false' by default.",
                        "name": "all-apps",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/admin/gies_onboarding_checklists": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Retrieves gies onboarding checklists",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminGetGiesOnboardingChecklists",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "It says if the data is associated with the current app or it is for all the apps within the organization. It is 'false' by default.",
                        "name": "all-apps",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma separated IDs of the desired records",
                        "name": "ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit - limit the result",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order - Possible values: asc, desc. Default: desc",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContentItem"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Creates a new gies onboarding checklist. \u003cb\u003e The data element could be either a primitive or nested json or array.\u003c/b\u003e",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminCreateGiesOnboardingChecklist",
                "parameters": [
                    {
                        "description": "Params",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createContentItemByCategoryRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ContentItem"
                        }
                    }
                }
            }
        },
        "/admin/gies_onboarding_checklists/{id}": {
            "put": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Updates a gies onboarding checklist with the specified id. \u003cb\u003e The data element could be either a primitive or nested json or array.\u003c/b\u003e",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminUpdateGiesOnboardingChecklist",
                "parameters": [
                    {
                        "description": "Params",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateContentItemByCategoryRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ContentItem"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Deletes a gies onboarding checklist with the specified id",
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminDeleteGiesOnboardingChecklist",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "It says if the data is associated with the current app or it is for all the apps within the organization. It is 'false' by default.",
                        "name": "all-apps",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/admin/gies_post_templates": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Retrieves gies post template items",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminGiesPostTemplates",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "It says if the data is associated with the current app or it is for all the apps within the organization. It is 'false' by default.",
                        "name": "all-apps",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma separated IDs of the desired records",
                        "name": "ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit - limit the result",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order - Possible values: asc, desc. Default: desc",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContentItem"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Creates a new gies post template. \u003cb\u003e The data element could be either a primitive or nested json or array.\u003c/b\u003e",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminGiesPostTemplate",
                "parameters": [
                    {
                        "description": "Params",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createContentItemByCategoryRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ContentItem"
                        }
                    }
                }
            }
        },
        "/admin/gies_post_templates/{id}": {
            "put": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Updates a gies post template with the specified id. \u003cb\u003e The data element could be either a primitive or nested json or array.\u003c/b\u003e",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminUpdateGiesPostTemplate",
                "parameters": [
                    {
                        "description": "Params",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateContentItemByCategoryRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ContentItem"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Deletes a gies post template with the specified id",
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminGiesPostTemplate",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "It says if the data is associated with the current app or it is for all the apps within the organization. It is 'false' by default.",
                        "name": "all-apps",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/admin/health_location/{id}": {
            "delete": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Deletes a health location with the specified id",
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminDeleteHealthLocation",
                "deprecated": true,
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/admin/health_locations": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Retrieves  all health locations",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminGetHealthLocations",
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coma separated IDs of the desired records",
                        "name": "ids",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Create a new health location",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminCreateHealthLocation",
                "deprecated": true,
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/admin/health_locations/{id}": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Retrieves a health location by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminGetHealthLocation",
                "deprecated": true,
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Updates a health location with the specified id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminUpdateHealthLocation",
                "deprecated": true,
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/admin/image": {
            "post": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Uploads an image to AWS S3",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminUploadImage",
                "parameters": [
                    {
                        "description": "path - path within the S3 bucket",
                        "name": "path",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "width - width of the image to resize. If width and height are missing - then the new image will use the original size",
                        "name": "width",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "height - height of the image to resize. If width and height are missing - then the new image will use the original size",
                        "name": "height",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "quality - quality of the image. Default: 90",
                        "name": "quality",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "fileName - the uploaded file name",
                        "name": "fileName",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/uploadImageResponse"
                        }
                    }
                }
            }
        },
        "/admin/student_guides": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Retrieves  all student guides",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminGetStudentGuides",
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coma separated IDs of the desired records",
                        "name": "ids",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Creates a student guide item",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminCreateStudentGuide",
                "deprecated": true,
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/admin/student_guides/{id}": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Retrieves  all items",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminGetStudentGuide",
                "deprecated": true,
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Updates a student guide with the specified id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminUpdateStudentGuide",
                "deprecated": true,
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Deletes a student guide item with the specified id",
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminDeleteStudentGuide",
                "deprecated": true,
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/admin/uiuc_onboarding_checklists": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Retrieves uiuc onboarding checklist items",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminGetUIUCOnboardingChecklists",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "It says if the data is associated with the current app or it is for all the apps within the organization. It is 'false' by default.",
                        "name": "all-apps",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma separated IDs of the desired records",
                        "name": "ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit - limit the result",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order - Possible values: asc, desc. Default: desc",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContentItem"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Creates a new uiuc onboarding checklist. \u003cb\u003e The data element could be either a primitive or nested json or array.\u003c/b\u003e",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminCreateUIUCOnboardingChecklist",
                "parameters": [
                    {
                        "description": "Params",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createContentItemByCategoryRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ContentItem"
                        }
                    }
                }
            }
        },
        "/admin/uiuc_onboarding_checklists/{id}": {
            "put": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Updates a uiuc onboarding checklist with the specified id. \u003cb\u003e The data element could be either a primitive or nested json or array.\u003c/b\u003e",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminUpdateUIUCOnboardingChecklist",
                "parameters": [
                    {
                        "description": "Params",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateContentItemByCategoryRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ContentItem"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Deletes a uiuc onboarding checklist with the specified id",
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminDeleteUIUCOnboardingChecklist",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "It says if the data is associated with the current app or it is for all the apps within the organization. It is 'false' by default.",
                        "name": "all-apps",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/admin/v2/health_locations": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Retrieves Retrieves health locations",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminGetHealthLocationsV2",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "It says if the data is associated with the current app or it is for all the apps within the organization. It is 'false' by default.",
                        "name": "all-apps",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma separated IDs of the desired records",
                        "name": "ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit - limit the result",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order - Possible values: asc, desc. Default: desc",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContentItem"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Creates a new health location. \u003cb\u003e The data element could be either a primitive or nested json or array.\u003c/b\u003e",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminCreateHealthLocationV2",
                "parameters": [
                    {
                        "description": "Params",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createContentItemByCategoryRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ContentItem"
                        }
                    }
                }
            }
        },
        "/admin/v2/health_locations/{id}": {
            "put": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Updates a health location with the specified id. \u003cb\u003e The data element could be either a primitive or nested json or array.\u003c/b\u003e",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminUpdateHealthLocationV2",
                "parameters": [
                    {
                        "description": "Params",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateContentItemByCategoryRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ContentItem"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Deletes a health location with the specified id",
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminDeleteHealthLocationV2",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "It says if the data is associated with the current app or it is for all the apps within the organization. It is 'false' by default.",
                        "name": "all-apps",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/admin/v2/student_guides": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Retrieves student guides",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminGetStudentGuidesV2",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "It says if the data is associated with the current app or it is for all the apps within the organization. It is 'false' by default.",
                        "name": "all-apps",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma separated IDs of the desired records",
                        "name": "ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit - limit the result",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order - Possible values: asc, desc. Default: desc",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContentItem"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Creates a new student guide. \u003cb\u003e The data element could be either a primitive or nested json or array.\u003c/b\u003e",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminCreateStudentGuidesV2",
                "parameters": [
                    {
                        "description": "Params",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createContentItemByCategoryRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ContentItem"
                        }
                    }
                }
            }
        },
        "/admin/v2/student_guides/{id}": {
            "put": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Updates a student guide with the specified id. \u003cb\u003e The data element could be either a primitive or nested json or array.\u003c/b\u003e",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminUpdateStudentGuidesV2",
                "parameters": [
                    {
                        "description": "Params",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateContentItemByCategoryRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ContentItem"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Deletes a student guide with the specified id",
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminDeleteStudentGuidesV2",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "It says if the data is associated with the current app or it is for all the apps within the organization. It is 'false' by default.",
                        "name": "all-apps",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/admin/wellness_tips": {
            "get": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Retrieves wellness tip items",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminGetWellnessTip",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "It says if the data is associated with the current app or it is for all the apps within the organization. It is 'false' by default.",
                        "name": "all-apps",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma separated IDs of the desired records",
                        "name": "ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit - limit the result",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order - Possible values: asc, desc. Default: desc",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContentItem"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Creates a new wellness tip. \u003cb\u003e The data element could be either a primitive or nested json or array.\u003c/b\u003e",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminCreateWellnessTip",
                "parameters": [
                    {
                        "description": "Params",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/createContentItemByCategoryRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ContentItem"
                        }
                    }
                }
            }
        },
        "/admin/wellness_tips/{id}": {
            "put": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Updates a wellness tip with the specified id. \u003cb\u003e The data element could be either a primitive or nested json or array.\u003c/b\u003e",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminUpdateWellnessTip",
                "parameters": [
                    {
                        "description": "Params",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateContentItemByCategoryRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ContentItem"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "AdminUserAuth": []
                    }
                ],
                "description": "Deletes a wellness tip with the specified id",
                "tags": [
                    "Admin"
                ],
                "operationId": "AdminDeleteWellnessTip",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "It says if the data is associated with the current app or it is for all the apps within the organization. It is 'false' by default.",
                        "name": "all-apps",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/content_item/categories": {
            "get": {
                "security": [
                    {
                        "UserAuth": []
                    }
                ],
                "description": "Retrieves  all content item categories that have in the database",
                "tags": [
                    "Client"
                ],
                "operationId": "GetContentItemsCategories",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "It says if the data is associated with the current app or it is for all the apps within the organization. It is 'false' by default.",
                        "name": "all-apps",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/content_items": {
            "get": {
                "security": [
                    {
                        "UserAuth": []
                    }
                ],
                "description": "Retrieves  all content items. \u003cb\u003e The data element could be either a primitive or nested json or array.\u003c/b\u003e",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "GetContentItems",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "It says if the data is associated with the current app or it is for all the apps within the organization. It is 'false' by default.",
                        "name": "all-apps",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit - limit the result",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order - Possible values: asc, desc. Default: desc",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "description": "Optional - body json of the all items ids that need to be filtered. NOTE: Bad/broken json will be interpreted as an empty filter and the request will be proceeded further.",
                        "name": "data",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/getContentItemsRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContentItem"
                            }
                        }
                    }
                }
            }
        },
        "/content_items/{id}": {
            "get": {
                "security": [
                    {
                        "UserAuth": []
                    }
                ],
                "description": "Retrieves a content item by id. \u003cb\u003e The data element could be either a primitive or nested json or array.\u003c/b\u003e",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "GetContentItem",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "It says if the data is associated with the current app or it is for all the apps within the organization. It is 'false' by default.",
                        "name": "all-apps",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ContentItem"
                        }
                    }
                }
            }
        },
        "/health_locations": {
            "get": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "description": "Retrieves  all health locations",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "GetHealthLocations",
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coma separated IDs of the desired records",
                        "name": "ids",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/health_locations/{id}": {
            "get": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "description": "Retrieves a health location by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "GetHealthLocation",
                "deprecated": true,
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/image": {
            "post": {
                "security": [
                    {
                        "UserAuth": []
                    }
                ],
                "description": "Uploads an image to AWS S3",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "UploadImage",
                "parameters": [
                    {
                        "description": "path - path within the S3 bucket",
                        "name": "path",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "width - width of the image to resize. If width and height are missing - then the new image will use the original size",
                        "name": "width",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "height - height of the image to resize. If width and height are missing - then the new image will use the original size",
                        "name": "height",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "quality - quality of the image. Default: 100",
                        "name": "quality",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "fileName - the uploaded file name",
                        "name": "fileName",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/profile_photo": {
            "get": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "description": "Deletes the profile photo of the user who request",
                "tags": [
                    "Client"
                ],
                "operationId": "DeleteProfilePhoto",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "description": "Stores profile photo",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "StoreProfilePhoto",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/profile_photo/{user-id}": {
            "get": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "description": "Retrieves the profile photo",
                "tags": [
                    "Client"
                ],
                "operationId": "GetProfilePhoto",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Possible values: default, medium, small",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/student_guides": {
            "get": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "description": "Retrieves  all student guides",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "GetStudentGuides",
                "deprecated": true,
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coma separated IDs of the desired records",
                        "name": "ids",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/student_guides/{id}": {
            "get": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "description": "Retrieves a student guide by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "GetStudentGuide",
                "deprecated": true,
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/twitter/users/{user_id}/tweets": {
            "get": {
                "security": [
                    {
                        "RokwireAuth": []
                    }
                ],
                "description": "Retrieves Twitter tweets for the specified user id. This API is intended to be invoked with the original Twitter query params to https://api.twitter.com/2/users/%s/tweets",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "GetTweeterPosts",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/version": {
            "get": {
                "description": "Gives the service version.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Client"
                ],
                "operationId": "Version",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "ContentItem": {
            "type": "object",
            "properties": {
                "app_id": {
                    "type": "string"
                },
                "category": {
                    "type": "string"
                },
                "data": {
                    "description": "could be eigther a primitive or nested json or array"
                },
                "date_created": {
                    "type": "string"
                },
                "date_updated": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "org_id": {
                    "type": "string"
                }
            }
        },
        "createContentItemByCategoryRequestBody": {
            "type": "object",
            "properties": {
                "all_apps": {
                    "type": "boolean"
                },
                "data": {}
            }
        },
        "createContentItemRequestBody": {
            "type": "object",
            "properties": {
                "all_apps": {
                    "type": "boolean"
                },
                "category": {
                    "type": "string"
                },
                "data": {}
            }
        },
        "getContentItemsRequestBody": {
            "type": "object",
            "properties": {
                "categories": {
                    "description": "List of Categories for the filter. Optional and may be null or missing.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ids": {
                    "description": "List of IDs for the filter. Optional and may be null or missing.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "updateContentItemByCategoryRequestBody": {
            "type": "object",
            "properties": {
                "all_apps": {
                    "type": "boolean"
                },
                "data": {}
            }
        },
        "uploadImageResponse": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "AdminGroupAuth": {
            "type": "apiKey",
            "name": "GROUP",
            "in": "header"
        },
        "AdminUserAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header (add Bearer prefix to the Authorization value)"
        },
        "RokwireAuth": {
            "type": "apiKey",
            "name": "ROKWIRE-API-KEY",
            "in": "header"
        },
        "UserAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header (add Bearer prefix to the Authorization value)"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.2.0",
	Host:             "localhost",
	BasePath:         "/content",
	Schemes:          []string{"https"},
	Title:            "Rokwire Content Building Block API",
	Description:      "Rokwire Content Building Block API Documentation.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
