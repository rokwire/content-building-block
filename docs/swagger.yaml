basePath: /content
definitions:
  ContentItem:
    properties:
      app_id:
        type: string
      category:
        type: string
      data:
        description: could be eigther a primitive or nested json or array
        type: object
      date_created:
        type: string
      date_updated:
        type: string
      id:
        type: string
      org_id:
        type: string
    type: object
  createContentItemByCategoryRequestBody:
    properties:
      all_apps:
        type: boolean
      data:
        type: object
    type: object
  createContentItemRequestBody:
    properties:
      all_apps:
        type: boolean
      category:
        type: string
      data:
        type: object
    type: object
  getContentItemsRequestBody:
    properties:
      categories:
        description: List of Categories for the filter. Optional and may be null or
          missing.
        items:
          type: string
        type: array
      ids:
        description: List of IDs for the filter. Optional and may be null or missing.
        items:
          type: string
        type: array
    type: object
  updateContentItemByCategoryRequestBody:
    properties:
      all_apps:
        type: boolean
      data:
        type: object
    type: object
  uploadImageResponse:
    properties:
      url:
        type: string
    type: object
host: localhost
info:
  contact: {}
  description: Rokwire Content Building Block API Documentation.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Rokwire Content Building Block API
  version: 1.2.0
paths:
  /admin/campus_reminders:
    get:
      consumes:
      - application/json
      description: Retrieves campus reminders
      operationId: AdminGetCampusReminders
      parameters:
      - description: It says if the data is associated with the current app or it
          is for all the apps within the organization. It is 'false' by default.
        in: query
        name: all-apps
        type: boolean
      - description: Comma separated IDs of the desired records
        in: query
        name: ids
        type: string
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit - limit the result
        in: query
        name: limit
        type: string
      - description: 'order - Possible values: asc, desc. Default: desc'
        in: query
        name: order
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ContentItem'
            type: array
      security:
      - AdminUserAuth: []
      tags:
      - Admin
    post:
      consumes:
      - application/json
      description: Creates a new campus reminder. <b> The data element could be either
        a primitive or nested json or array.</b>
      operationId: AdminCreateCampusReminder
      parameters:
      - description: Params
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/createContentItemByCategoryRequestBody'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ContentItem'
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /admin/campus_reminders/{id}:
    delete:
      description: Deletes a campus reminder with the specified id
      operationId: AdminDeleteCampusReminder
      parameters:
      - description: It says if the data is associated with the current app or it
          is for all the apps within the organization. It is 'false' by default.
        in: query
        name: all-apps
        type: boolean
      responses:
        "200": {}
      security:
      - AdminUserAuth: []
      tags:
      - Admin
    put:
      consumes:
      - application/json
      description: Updates a campus reminder with the specified id. <b> The data element
        could be either a primitive or nested json or array.</b>
      operationId: AdminCampusReminder
      parameters:
      - description: Params
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/updateContentItemByCategoryRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ContentItem'
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /admin/content_item/categories:
    get:
      description: Retrieves  all content item categories that have in the database
      operationId: AdminGetContentItemsCategories
      parameters:
      - description: It says if the data is associated with the current app or it
          is for all the apps within the organization. It is 'false' by default.
        in: query
        name: all-apps
        type: boolean
      responses:
        "200": {}
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /admin/content_items:
    get:
      consumes:
      - application/json
      description: Retrieves  all content items.<b> The data element could be either
        a primitive or nested json or array.</b>
      operationId: AdminGetContentItems
      parameters:
      - description: It says if the data is associated with the current app or it
          is for all the apps within the organization. It is 'false' by default.
        in: query
        name: all-apps
        type: boolean
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit - limit the result
        in: query
        name: limit
        type: string
      - description: 'order - Possible values: asc, desc. Default: desc'
        in: query
        name: order
        type: string
      - description: 'Optional - body json of the all items ids that need to be filtered.
          NOTE: Bad/broken json will be interpreted as an empty filter and the request
          will be proceeded further.'
        in: body
        name: data
        schema:
          $ref: '#/definitions/getContentItemsRequestBody'
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ContentItem'
            type: array
      security:
      - AdminUserAuth: []
      tags:
      - Admin
    post:
      consumes:
      - application/json
      description: Creates a new content item. <b> The data element could be either
        a primitive or nested json or array.</b>
      operationId: AdminCreateContentItem
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/createContentItemRequestBody'
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /admin/content_items/{id}:
    delete:
      description: Deletes a content item with the specified id
      operationId: AdminDeleteContentItem
      parameters:
      - description: It says if the data is associated with the current app or it
          is for all the apps within the organization. It is 'false' by default.
        in: query
        name: all-apps
        type: boolean
      responses:
        "200": {}
      security:
      - AdminUserAuth: []
      tags:
      - Admin
    get:
      consumes:
      - application/json
      description: Retrieves a content item by id. <b> The data element could be either
        a primitive or nested json or array.</b>
      operationId: AdminGetContentItem
      parameters:
      - description: It says if the data is associated with the current app or it
          is for all the apps within the organization. It is 'false' by default.
        in: query
        name: all-apps
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ContentItem'
      security:
      - AdminUserAuth: []
      tags:
      - Admin
    put:
      consumes:
      - application/json
      description: Updates a content item with the specified id. <b> The data element
        could be either a primitive or nested json or array.</b>
      operationId: AdminUpdateContentItem
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ContentItem'
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /admin/gies_nudge_templates:
    get:
      consumes:
      - application/json
      description: Retrieves gies nudge template items
      operationId: AdminGiesNudgeTemplates
      parameters:
      - description: It says if the data is associated with the current app or it
          is for all the apps within the organization. It is 'false' by default.
        in: query
        name: all-apps
        type: boolean
      - description: Comma separated IDs of the desired records
        in: query
        name: ids
        type: string
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit - limit the result
        in: query
        name: limit
        type: string
      - description: 'order - Possible values: asc, desc. Default: desc'
        in: query
        name: order
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ContentItem'
            type: array
      security:
      - AdminUserAuth: []
      tags:
      - Admin
    post:
      consumes:
      - application/json
      description: Creates a new gies nudge template. <b> The data element could be
        either a primitive or nested json or array.</b>
      operationId: AdminGiesNudgeTemplate
      parameters:
      - description: Params
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/createContentItemByCategoryRequestBody'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ContentItem'
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /admin/gies_nudge_templates/{id}:
    delete:
      description: Deletes a gies nudge template with the specified id
      operationId: AdminGiesNudgeTemplate
      parameters:
      - description: It says if the data is associated with the current app or it
          is for all the apps within the organization. It is 'false' by default.
        in: query
        name: all-apps
        type: boolean
      responses:
        "200": {}
      security:
      - AdminUserAuth: []
      tags:
      - Admin
    put:
      consumes:
      - application/json
      description: Updates a gies nudge template with the specified id. <b> The data
        element could be either a primitive or nested json or array.</b>
      operationId: AdminUpdateGiesNudgeTemplate
      parameters:
      - description: Params
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/updateContentItemByCategoryRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ContentItem'
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /admin/gies_onboarding_checklist:
    get:
      consumes:
      - application/json
      description: Retrieves gies onboarding checklists
      operationId: AdminGetGiesOnboardingChecklists
      parameters:
      - description: It says if the data is associated with the current app or it
          is for all the apps within the organization. It is 'false' by default.
        in: query
        name: all-apps
        type: boolean
      - description: Comma separated IDs of the desired records
        in: query
        name: ids
        type: string
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit - limit the result
        in: query
        name: limit
        type: string
      - description: 'order - Possible values: asc, desc. Default: desc'
        in: query
        name: order
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ContentItem'
            type: array
      security:
      - AdminUserAuth: []
      tags:
      - Admin
    post:
      consumes:
      - application/json
      description: Creates a new gies onboarding checklist. <b> The data element could
        be either a primitive or nested json or array.</b>
      operationId: AdminCreateGiesOnboardingChecklist
      parameters:
      - description: Params
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/createContentItemByCategoryRequestBody'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ContentItem'
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /admin/gies_onboarding_checklist/{id}:
    delete:
      description: Deletes a gies onboarding checklist with the specified id
      operationId: AdminDeleteGiesOnboardingChecklist
      parameters:
      - description: It says if the data is associated with the current app or it
          is for all the apps within the organization. It is 'false' by default.
        in: query
        name: all-apps
        type: boolean
      responses:
        "200": {}
      security:
      - AdminUserAuth: []
      tags:
      - Admin
    put:
      consumes:
      - application/json
      description: Updates a gies onboarding checklist with the specified id. <b>
        The data element could be either a primitive or nested json or array.</b>
      operationId: AdminUpdateGiesOnboardingChecklist
      parameters:
      - description: Params
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/updateContentItemByCategoryRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ContentItem'
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /admin/health_location/{id}:
    delete:
      deprecated: true
      description: Deletes a health location with the specified id
      operationId: AdminDeleteHealthLocation
      responses:
        "200": {}
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /admin/health_locations:
    get:
      consumes:
      - application/json
      deprecated: true
      description: Retrieves  all health locations
      operationId: AdminGetHealthLocations
      parameters:
      - description: Coma separated IDs of the desired records
        in: query
        name: ids
        type: string
      responses:
        "200": {}
      security:
      - AdminUserAuth: []
      tags:
      - Admin
    post:
      consumes:
      - application/json
      deprecated: true
      description: Create a new health location
      operationId: AdminCreateHealthLocation
      responses:
        "200": {}
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /admin/health_locations/{id}:
    get:
      consumes:
      - application/json
      deprecated: true
      description: Retrieves a health location by id
      operationId: AdminGetHealthLocation
      produces:
      - application/json
      responses:
        "200": {}
      security:
      - AdminUserAuth: []
      tags:
      - Admin
    put:
      consumes:
      - application/json
      deprecated: true
      description: Updates a health location with the specified id
      operationId: AdminUpdateHealthLocation
      produces:
      - application/json
      responses:
        "200": {}
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /admin/image:
    post:
      consumes:
      - multipart/form-data
      description: Uploads an image to AWS S3
      operationId: AdminUploadImage
      parameters:
      - description: path - path within the S3 bucket
        in: body
        name: path
        required: true
        schema:
          type: string
      - description: width - width of the image to resize. If width and height are
          missing - then the new image will use the original size
        in: body
        name: width
        schema:
          type: string
      - description: height - height of the image to resize. If width and height are
          missing - then the new image will use the original size
        in: body
        name: height
        schema:
          type: string
      - description: 'quality - quality of the image. Default: 90'
        in: body
        name: quality
        schema:
          type: string
      - description: fileName - the uploaded file name
        in: body
        name: fileName
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/uploadImageResponse'
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /admin/student_guides:
    get:
      consumes:
      - application/json
      deprecated: true
      description: Retrieves  all student guides
      operationId: AdminGetStudentGuides
      parameters:
      - description: Coma separated IDs of the desired records
        in: query
        name: ids
        type: string
      responses:
        "200": {}
      security:
      - AdminUserAuth: []
      tags:
      - Admin
    post:
      consumes:
      - application/json
      deprecated: true
      description: Creates a student guide item
      operationId: AdminCreateStudentGuide
      responses:
        "200": {}
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /admin/student_guides/{id}:
    delete:
      deprecated: true
      description: Deletes a student guide item with the specified id
      operationId: AdminDeleteStudentGuide
      responses:
        "200": {}
      security:
      - AdminUserAuth: []
      tags:
      - Admin
    get:
      consumes:
      - application/json
      deprecated: true
      description: Retrieves  all items
      operationId: AdminGetStudentGuide
      produces:
      - application/json
      responses:
        "200": {}
      security:
      - AdminUserAuth: []
      tags:
      - Admin
    put:
      consumes:
      - application/json
      deprecated: true
      description: Updates a student guide with the specified id
      operationId: AdminUpdateStudentGuide
      produces:
      - application/json
      responses:
        "200": {}
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /admin/uiuc_onboarding_checklists:
    get:
      consumes:
      - application/json
      description: Retrieves uiuc onboarding checklist items
      operationId: AdminGetUIUCOnboardingChecklists
      parameters:
      - description: It says if the data is associated with the current app or it
          is for all the apps within the organization. It is 'false' by default.
        in: query
        name: all-apps
        type: boolean
      - description: Comma separated IDs of the desired records
        in: query
        name: ids
        type: string
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit - limit the result
        in: query
        name: limit
        type: string
      - description: 'order - Possible values: asc, desc. Default: desc'
        in: query
        name: order
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ContentItem'
            type: array
      security:
      - AdminUserAuth: []
      tags:
      - Admin
    post:
      consumes:
      - application/json
      description: Creates a new uiuc onboarding checklist. <b> The data element could
        be either a primitive or nested json or array.</b>
      operationId: AdminCreateUIUCOnboardingChecklist
      parameters:
      - description: Params
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/createContentItemByCategoryRequestBody'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ContentItem'
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /admin/uiuc_onboarding_checklists/{id}:
    delete:
      description: Deletes a uiuc onboarding checklist with the specified id
      operationId: AdminDeleteUIUCOnboardingChecklist
      parameters:
      - description: It says if the data is associated with the current app or it
          is for all the apps within the organization. It is 'false' by default.
        in: query
        name: all-apps
        type: boolean
      responses:
        "200": {}
      security:
      - AdminUserAuth: []
      tags:
      - Admin
    put:
      consumes:
      - application/json
      description: Updates a uiuc onboarding checklist with the specified id. <b>
        The data element could be either a primitive or nested json or array.</b>
      operationId: AdminUpdateUIUCOnboardingChecklist
      parameters:
      - description: Params
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/updateContentItemByCategoryRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ContentItem'
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /admin/v2/health_locations:
    get:
      consumes:
      - application/json
      description: Retrieves Retrieves health locations
      operationId: AdminGetHealthLocationsV2
      parameters:
      - description: It says if the data is associated with the current app or it
          is for all the apps within the organization. It is 'false' by default.
        in: query
        name: all-apps
        type: boolean
      - description: Comma separated IDs of the desired records
        in: query
        name: ids
        type: string
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit - limit the result
        in: query
        name: limit
        type: string
      - description: 'order - Possible values: asc, desc. Default: desc'
        in: query
        name: order
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ContentItem'
            type: array
      security:
      - AdminUserAuth: []
      tags:
      - Admin
    post:
      consumes:
      - application/json
      description: Creates a new health location. <b> The data element could be either
        a primitive or nested json or array.</b>
      operationId: AdminCreateHealthLocationV2
      parameters:
      - description: Params
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/createContentItemByCategoryRequestBody'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ContentItem'
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /admin/v2/health_locations/{id}:
    delete:
      description: Deletes a health location with the specified id
      operationId: AdminDeleteHealthLocationV2
      parameters:
      - description: It says if the data is associated with the current app or it
          is for all the apps within the organization. It is 'false' by default.
        in: query
        name: all-apps
        type: boolean
      responses:
        "200": {}
      security:
      - AdminUserAuth: []
      tags:
      - Admin
    put:
      consumes:
      - application/json
      description: Updates a health location with the specified id. <b> The data element
        could be either a primitive or nested json or array.</b>
      operationId: AdminUpdateHealthLocationV2
      parameters:
      - description: Params
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/updateContentItemByCategoryRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ContentItem'
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /admin/v2/student_guides:
    get:
      consumes:
      - application/json
      description: Retrieves student guides
      operationId: AdminGetStudentGuidesV2
      parameters:
      - description: It says if the data is associated with the current app or it
          is for all the apps within the organization. It is 'false' by default.
        in: query
        name: all-apps
        type: boolean
      - description: Comma separated IDs of the desired records
        in: query
        name: ids
        type: string
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit - limit the result
        in: query
        name: limit
        type: string
      - description: 'order - Possible values: asc, desc. Default: desc'
        in: query
        name: order
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ContentItem'
            type: array
      security:
      - AdminUserAuth: []
      tags:
      - Admin
    post:
      consumes:
      - application/json
      description: Creates a new student guide. <b> The data element could be either
        a primitive or nested json or array.</b>
      operationId: AdminCreateStudentGuidesV2
      parameters:
      - description: Params
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/createContentItemByCategoryRequestBody'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ContentItem'
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /admin/v2/student_guides/{id}:
    delete:
      description: Deletes a student guide with the specified id
      operationId: AdminDeleteStudentGuidesV2
      parameters:
      - description: It says if the data is associated with the current app or it
          is for all the apps within the organization. It is 'false' by default.
        in: query
        name: all-apps
        type: boolean
      responses:
        "200": {}
      security:
      - AdminUserAuth: []
      tags:
      - Admin
    put:
      consumes:
      - application/json
      description: Updates a student guide with the specified id. <b> The data element
        could be either a primitive or nested json or array.</b>
      operationId: AdminUpdateStudentGuidesV2
      parameters:
      - description: Params
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/updateContentItemByCategoryRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ContentItem'
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /admin/wellness:
    get:
      consumes:
      - application/json
      description: Retrieves wellness items
      operationId: AdminGetWellness
      parameters:
      - description: It says if the data is associated with the current app or it
          is for all the apps within the organization. It is 'false' by default.
        in: query
        name: all-apps
        type: boolean
      - description: Comma separated IDs of the desired records
        in: query
        name: ids
        type: string
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit - limit the result
        in: query
        name: limit
        type: string
      - description: 'order - Possible values: asc, desc. Default: desc'
        in: query
        name: order
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ContentItem'
            type: array
      security:
      - AdminUserAuth: []
      tags:
      - Admin
    post:
      consumes:
      - application/json
      description: Creates a new wellness. <b> The data element could be either a
        primitive or nested json or array.</b>
      operationId: AdminCreateWellness
      parameters:
      - description: Params
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/createContentItemByCategoryRequestBody'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ContentItem'
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /admin/wellness/{id}:
    delete:
      description: Deletes a wellness with the specified id
      operationId: AdminDeleteWellness
      parameters:
      - description: It says if the data is associated with the current app or it
          is for all the apps within the organization. It is 'false' by default.
        in: query
        name: all-apps
        type: boolean
      responses:
        "200": {}
      security:
      - AdminUserAuth: []
      tags:
      - Admin
    put:
      consumes:
      - application/json
      description: Updates a wellness with the specified id. <b> The data element
        could be either a primitive or nested json or array.</b>
      operationId: AdminUpdateWellness
      parameters:
      - description: Params
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/updateContentItemByCategoryRequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ContentItem'
      security:
      - AdminUserAuth: []
      tags:
      - Admin
  /content_item/categories:
    get:
      description: Retrieves  all content item categories that have in the database
      operationId: GetContentItemsCategories
      parameters:
      - description: It says if the data is associated with the current app or it
          is for all the apps within the organization. It is 'false' by default.
        in: query
        name: all-apps
        type: boolean
      responses:
        "200": {}
      security:
      - UserAuth: []
      tags:
      - Client
  /content_items:
    get:
      consumes:
      - application/json
      description: Retrieves  all content items. <b> The data element could be either
        a primitive or nested json or array.</b>
      operationId: GetContentItems
      parameters:
      - description: It says if the data is associated with the current app or it
          is for all the apps within the organization. It is 'false' by default.
        in: query
        name: all-apps
        type: boolean
      - description: offset
        in: query
        name: offset
        type: string
      - description: limit - limit the result
        in: query
        name: limit
        type: string
      - description: 'order - Possible values: asc, desc. Default: desc'
        in: query
        name: order
        type: string
      - description: 'Optional - body json of the all items ids that need to be filtered.
          NOTE: Bad/broken json will be interpreted as an empty filter and the request
          will be proceeded further.'
        in: body
        name: data
        schema:
          $ref: '#/definitions/getContentItemsRequestBody'
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ContentItem'
            type: array
      security:
      - UserAuth: []
      tags:
      - Client
  /content_items/{id}:
    get:
      consumes:
      - application/json
      description: Retrieves a content item by id. <b> The data element could be either
        a primitive or nested json or array.</b>
      operationId: GetContentItem
      parameters:
      - description: It says if the data is associated with the current app or it
          is for all the apps within the organization. It is 'false' by default.
        in: query
        name: all-apps
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ContentItem'
      security:
      - UserAuth: []
      tags:
      - Client
  /health_locations:
    get:
      consumes:
      - application/json
      deprecated: true
      description: Retrieves  all health locations
      operationId: GetHealthLocations
      parameters:
      - description: Coma separated IDs of the desired records
        in: query
        name: ids
        type: string
      responses:
        "200": {}
      security:
      - RokwireAuth: []
      tags:
      - Client
  /health_locations/{id}:
    get:
      consumes:
      - application/json
      deprecated: true
      description: Retrieves a health location by id
      operationId: GetHealthLocation
      produces:
      - application/json
      responses:
        "200": {}
      security:
      - RokwireAuth: []
      tags:
      - Client
  /image:
    post:
      consumes:
      - multipart/form-data
      description: Uploads an image to AWS S3
      operationId: UploadImage
      parameters:
      - description: path - path within the S3 bucket
        in: body
        name: path
        required: true
        schema:
          type: string
      - description: width - width of the image to resize. If width and height are
          missing - then the new image will use the original size
        in: body
        name: width
        schema:
          type: string
      - description: height - height of the image to resize. If width and height are
          missing - then the new image will use the original size
        in: body
        name: height
        schema:
          type: string
      - description: 'quality - quality of the image. Default: 100'
        in: body
        name: quality
        schema:
          type: string
      - description: fileName - the uploaded file name
        in: body
        name: fileName
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200": {}
      security:
      - UserAuth: []
      tags:
      - Client
  /profile_photo:
    get:
      description: Deletes the profile photo of the user who request
      operationId: DeleteProfilePhoto
      responses:
        "200": {}
      security:
      - RokwireAuth: []
      tags:
      - Client
    post:
      consumes:
      - application/json
      description: Stores profile photo
      operationId: StoreProfilePhoto
      responses:
        "200": {}
      security:
      - RokwireAuth: []
      tags:
      - Client
  /profile_photo/{user-id}:
    get:
      description: Retrieves the profile photo
      operationId: GetProfilePhoto
      parameters:
      - description: 'Possible values: default, medium, small'
        in: query
        name: size
        type: string
      responses:
        "200": {}
      security:
      - RokwireAuth: []
      tags:
      - Client
  /student_guides:
    get:
      consumes:
      - application/json
      deprecated: true
      description: Retrieves  all student guides
      operationId: GetStudentGuides
      parameters:
      - description: Coma separated IDs of the desired records
        in: query
        name: ids
        type: string
      responses:
        "200": {}
      security:
      - RokwireAuth: []
      tags:
      - Client
  /student_guides/{id}:
    get:
      consumes:
      - application/json
      deprecated: true
      description: Retrieves a student guide by id
      operationId: GetStudentGuide
      produces:
      - application/json
      responses:
        "200": {}
      security:
      - RokwireAuth: []
      tags:
      - Client
  /twitter/users/{user_id}/tweets:
    get:
      description: Retrieves Twitter tweets for the specified user id. This API is
        intended to be invoked with the original Twitter query params to https://api.twitter.com/2/users/%s/tweets
      operationId: GetTweeterPosts
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      security:
      - RokwireAuth: []
      tags:
      - Client
  /version:
    get:
      description: Gives the service version.
      operationId: Version
      produces:
      - text/plain
      responses:
        "200": {}
      tags:
      - Client
schemes:
- https
securityDefinitions:
  AdminGroupAuth:
    in: header
    name: GROUP
    type: apiKey
  AdminUserAuth:
    in: header (add Bearer prefix to the Authorization value)
    name: Authorization
    type: apiKey
  RokwireAuth:
    in: header
    name: ROKWIRE-API-KEY
    type: apiKey
  UserAuth:
    in: header (add Bearer prefix to the Authorization value)
    name: Authorization
    type: apiKey
swagger: "2.0"
