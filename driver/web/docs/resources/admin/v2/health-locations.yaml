get:
  tags:
    - Admin
  summary: Retrieves health locations
  description: |
    Retrieves health locations
  security:
    - bearerAuth: []   
  parameters:
    - name: all-apps
      in: query
      description: all-apps
      required: true
      style: form
      explode: false
      schema:
        type: boolean
    - name: ids
      in: query
      description: Coma separated IDs of the desired records
      required: true
      style: form
      explode: false
      schema:
        type: string    
    - name: offset
      in: query
      description: offset
      required: true
      style: form
      explode: false
      schema:
        type: string  
    - name: limit
      in: query
      description: limit the result
      required: true
      style: form
      explode: false
      schema:
        type: string 
    - name: order
      in: query
      description: Possible values- asc, desc. Default- desc
      required: true
      style: form
      explode: false
      schema:
        type: string             
  responses:
    200:
      description: Success
      content:
         application/json:
           schema:
             type: array
             items:
               $ref: "../../../schemas/application/ContentItem.yaml"
    400:
      description: Bad request
    401:
      description: Unauthorized
    500:
      description: Internal error
post:
  tags:
    - Admin 
  summary: Creates a new health location
  description: |
    Creates a new health location
  security:
    - bearerAuth: [] 
  requestBody:
     description: Creates a health location
     content:
       application/json:
         schema:
           $ref: "../../../schemas/apis/admin/health-locations/request/Request.yaml"            
  responses:
    200:
      description: Success
    400:
      description: Bad request
    401:
      description: Unauthorized
    500:
      description: Internal error
